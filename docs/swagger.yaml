basePath: /
host: localhost:8080
info:
  contact: {}
  description: API для аутентификации и управления сессиями
  title: Auth Service API
  version: "1.0"
paths:
  /refresh:
    get:
      description: Обновляет пары access и refresh токены, токены берутся из кук
      produces:
      - application/json
      responses:
        "200":
          description: Токены успешно обновлены и установлены в cookies
        "401":
          description: 'Пример: {''error'': ''Unauthorized''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'Пример: {''error'': ''Session not found''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'Пример: {''error'': ''Internal server error''}'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить пару токенов
      tags:
      - Token
  /tokens/{user_guid}:
    get:
      description: Генерирует новую пару JWT-токенов для пользователя и сохраняет
        сессию
      parameters:
      - description: GUID пользователя в формате UUID
        format: uuid
        in: path
        name: user_guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Пример: {''message'': ''tokens created''}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'Пример: {''error'': ''Invalid user GUID''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'Пример: {''error'': ''Internal server error''}'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пару токенов (access + refresh)
      tags:
      - Token
  /user/guid:
    get:
      description: Возвращает GUID пользователя из валидной сессии (требуется access
        token в cookies)
      produces:
      - application/json
      responses:
        "200":
          description: 'Пример: {"user_guid": "550e8400-e29b-41d4-a716-446655440000"}'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Невалидный/отсутствующий access token
        "404":
          description: Сессия не найдена
      security:
      - ApiKeyAuth: []
      summary: Получить GUID пользователя
      tags:
      - User
  /user/logout:
    get:
      description: Удаляет сессию пользователя по access token (требуется валидный
        access token в cookies)
      produces:
      - application/json
      responses:
        "200":
          description: Сессия успешно удалена
        "401":
          description: Невалидный/отсутствующий access token
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Сессия не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Выход пользователя из системы
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: access_token
    type: apiKey
swagger: "2.0"
